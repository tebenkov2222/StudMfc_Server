@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ISTU_MFC.ViewModels.DownloadGenerationViewModel

@{
    Layout = "_LayoutEmployees";
    ViewData["Title"] = "DownloadGeneration";
}

<div class="d-flex justify-content-center">
    <h3>ID заявки:</h3>
    <h3 name="IDservice">@Model.RequestId</h3>
</div>
<div id="word-container" class="word-container"></div>

<div name="buttons" class="d-flex justify-content-center">
    <form method="post" name="Download">
        <input name="DocumentPath" value="@Model.PathToDownloadDocument" type="hidden"/>
        <input name="button" value="Скачать" class="btn" type="submit"/>
    </form>
</div>
<script>
        window.onload = function ()
    {
        openDoc('@Model.PathToPreviewDoc')
    }
</script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://unpkg.com/jszip/dist/jszip.min.js"></script>
<script src="~/Scripts/docx-preview.js"></script>
<script type="text/javascript">
             function openDoc (path) {
                    $.ajax({
                        method: "post",
                        url: '@Url.Action("GetWordDocument","Employees")',
                        dataType: 'json', 
                        data: { "path": path },
                        success: function (data) {
                            //Convert Base64 string to Byte Array.
                            var bytes = Base64ToBytes(data);
                            //Convert BLOB to File object.
                            var doc = new File([bytes], "application/vnd.openxmlformats-officedocument.wordprocessingml.document");
                            //If Document not NULL, render it.
                            if (doc != null) {
                                //Set the Document options.
                                var docxOptions = Object.assign(docx.defaultOptions, {
                                    useMathMLPolyfill: true
                                });
                                //Reference the Container DIV.
                                var container = document.querySelector("#word-container");
                                //Render the Word Document.
                                docx.renderAsync(doc, container, null, docxOptions);
                            }
                        },
                        error: function (err){
                                alert("Ошибка")
                                alert(err.status + err.statusText);
                            }
                    });
                }
                function Base64ToBytes(base64) {
                    try{
                        var s = window.atob(base64);
                        }
                    catch (e) {
                      alert('Ошибка ' + e.name + ":" + e.message + "\n" + e.stack);
                    }
                    
                    var bytes = new Uint8Array(s.length);
                    for (var i = 0; i < s.length; i++) {
                        bytes[i] = s.charCodeAt(i);
                    }
                    return bytes;
                };
        </script>

